{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\mindpeace-designer\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState } from 'react';\nimport ReactFlow, { ReactFlowProvider, addEdge, MiniMap, Controls, Background, useNodesState, useEdgesState, MarkerType } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const [selectedNodeId, setSelectedNodeId] = useState(null);\n  const [label, setLabel] = useState('');\n  const [capture, setCapture] = useState('');\n  const [next, setNext] = useState('');\n  const [expectedInputs, setExpectedInputs] = useState('');\n  const [inputMapping, setInputMapping] = useState('');\n  const [followUpPrompt, setFollowUpPrompt] = useState('');\n  const [followUpCapture, setFollowUpCapture] = useState('');\n  const [gpt, setGpt] = useState(false);\n  const [end, setEnd] = useState(false);\n  const onConnect = useCallback(params => {\n    const label = prompt('Label for this edge (e.g., \"yes\", \"no\")');\n    setEdges(eds => addEdge({\n      ...params,\n      label: label || '',\n      type: 'default',\n      markerEnd: {\n        type: MarkerType.ArrowClosed\n      }\n    }, eds));\n  }, [setEdges]);\n  const onNodeClick = useCallback((_, node) => {\n    var _n$data$gpt;\n    setSelectedNodeId(node.id);\n    const n = nodes.find(n => n.id === node.id);\n    setLabel(n.data.label || '');\n    setCapture(n.data.capture || '');\n    setNext(n.data.next || '');\n    setExpectedInputs((n.data.expected_inputs || []).join(', '));\n    setInputMapping(JSON.stringify(n.data.input_mapping || {}, null, 2));\n    setFollowUpPrompt(n.data.follow_up_prompt || '');\n    setFollowUpCapture(n.data.follow_up_capture || '');\n    setGpt(((_n$data$gpt = n.data.gpt) === null || _n$data$gpt === void 0 ? void 0 : _n$data$gpt.enabled) || false);\n    setEnd(n.data.end || false);\n  }, [nodes]);\n  const handleNodeUpdate = () => {\n    const inputs = expectedInputs.split(',').map(i => i.trim()).filter(Boolean);\n    let inputMap = {};\n    try {\n      inputMap = JSON.parse(inputMapping || '{}');\n    } catch {}\n    setNodes(nds => nds.map(node => node.id === selectedNodeId ? {\n      ...node,\n      data: {\n        ...node.data,\n        label,\n        capture,\n        next,\n        expected_inputs: inputs,\n        input_mapping: inputMap,\n        follow_up_prompt: followUpPrompt,\n        follow_up_capture: followUpCapture,\n        gpt: gpt ? {\n          enabled: true\n        } : null,\n        end\n      }\n    } : node));\n  };\n  const addNewNode = () => {\n    const newId = nanoid(4);\n    const newNode = {\n      id: newId,\n      type: 'default',\n      data: {\n        label: `New Node ${newId}`\n      },\n      position: {\n        x: Math.random() * 400,\n        y: Math.random() * 400\n      }\n    };\n    setNodes(nds => [...nds, newNode]);\n  };\n  const exportToJson = () => {\n    const exported = {\n      nodes: {}\n    };\n    nodes.forEach(node => {\n      const nodeData = {\n        message: node.data.label || ''\n      };\n      if (node.data.capture) nodeData.capture = node.data.capture;\n      if (node.data.next) nodeData.next = node.data.next;\n      if (node.data.expected_inputs) nodeData.expected_inputs = node.data.expected_inputs;\n      if (node.data.input_mapping) nodeData.input_mapping = node.data.input_mapping;\n      if (node.data.follow_up_prompt) nodeData.follow_up_prompt = node.data.follow_up_prompt;\n      if (node.data.follow_up_capture) nodeData.follow_up_capture = node.data.follow_up_capture;\n      if (node.data.gpt) nodeData.gpt = node.data.gpt;\n      if (node.data.end) nodeData.end = node.data.end;\n\n      // derive options from edges\n      const options = {};\n      edges.forEach(edge => {\n        if (edge.source === node.id && edge.label) {\n          options[edge.label] = edge.target;\n        }\n      });\n      if (Object.keys(options).length > 0) {\n        nodeData.options = options;\n      }\n      exported.nodes[node.id] = nodeData;\n    });\n    const blob = new Blob([JSON.stringify(exported, null, 2)], {\n      type: 'application/json'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'conversation_data.json';\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n  const handleFileUpload = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = e => {\n      try {\n        const json = JSON.parse(e.target.result);\n        if (!json.nodes) return alert('Invalid file format');\n        const rawNodes = json.nodes;\n        const importedNodes = Object.entries(rawNodes).map(([id, node], index) => ({\n          id,\n          type: 'default',\n          data: {\n            label: node.message || '',\n            capture: node.capture || '',\n            next: node.next || '',\n            expected_inputs: node.expected_inputs || [],\n            input_mapping: node.input_mapping || {},\n            follow_up_prompt: node.follow_up_prompt || '',\n            follow_up_capture: node.follow_up_capture || '',\n            gpt: node.gpt || null,\n            end: node.end || false\n          },\n          position: {\n            x: index % 4 * 250,\n            y: Math.floor(index / 4) * 150\n          }\n        }));\n        const generatedEdges = [];\n        Object.entries(rawNodes).forEach(([sourceId, node]) => {\n          if (node.options) {\n            Object.entries(node.options).forEach(([label, targetId]) => {\n              generatedEdges.push({\n                id: `${sourceId}-${targetId}-${label}`,\n                source: sourceId,\n                target: targetId,\n                label,\n                type: 'default',\n                markerEnd: {\n                  type: MarkerType.ArrowClosed\n                }\n              });\n            });\n          }\n          if (node.next) {\n            generatedEdges.push({\n              id: `${sourceId}-${node.next}`,\n              source: sourceId,\n              target: node.next,\n              type: 'default',\n              markerEnd: {\n                type: MarkerType.ArrowClosed\n              }\n            });\n          }\n        });\n        setNodes(importedNodes);\n        setEdges(generatedEdges);\n        setSelectedNodeId(null);\n      } catch (err) {\n        alert('Failed to parse file.');\n      }\n    };\n    reader.readAsText(file);\n  };\n  const nodeTypes = {\n    default: ({\n      id,\n      data\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 10,\n        border: '2px solid #333',\n        borderRadius: 8,\n        background: '#fff',\n        minWidth: 150\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [\"ID: \", id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: data.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this)\n  };\n  return /*#__PURE__*/_jsxDEV(ReactFlowProvider, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        height: '100vh'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '75%',\n          height: '100%'\n        },\n        children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n          nodes: nodes,\n          edges: edges,\n          onNodesChange: onNodesChange,\n          onEdgesChange: onEdgesChange,\n          onConnect: onConnect,\n          onNodeClick: onNodeClick,\n          nodeTypes: nodeTypes,\n          fitView: true,\n          children: [/*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '25%',\n          padding: 10,\n          background: '#f9f9f9'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Node Editor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addNewNode,\n          children: \"\\u2795 Add Node\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 59\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 65\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Message:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 34\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: 3,\n          value: label,\n          onChange: e => setLabel(e.target.value),\n          style: {\n            width: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 115\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Capture Field:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 40\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: capture,\n          onChange: e => setCapture(e.target.value),\n          style: {\n            width: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 107\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Next Node ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 39\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: next,\n          onChange: e => setNext(e.target.value),\n          style: {\n            width: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 101\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Expected Inputs (comma separated):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 60\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: expectedInputs,\n          onChange: e => setExpectedInputs(e.target.value),\n          style: {\n            width: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 121\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Input Mapping (JSON):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 47\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: 3,\n          value: inputMapping,\n          onChange: e => setInputMapping(e.target.value),\n          style: {\n            width: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 129\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Follow-up Prompt:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 43\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: followUpPrompt,\n          onChange: e => setFollowUpPrompt(e.target.value),\n          style: {\n            width: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 121\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Follow-up Capture:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 44\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: followUpCapture,\n          onChange: e => setFollowUpCapture(e.target.value),\n          style: {\n            width: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 123\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: gpt,\n            onChange: () => setGpt(!gpt)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 18\n          }, this), \" GPT Enabled\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 107\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: end,\n            onChange: () => setEnd(!end)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 18\n          }, this), \" End Node\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 104\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 110\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNodeUpdate,\n          children: \"\\uD83D\\uDCBE Update Node\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 69\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 75\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: exportToJson,\n          children: \"\\uD83D\\uDCE4 Export JSON\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 65\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 71\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".json\",\n          onChange: handleFileUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 231,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"/Bi8h8kgZKZCtzUuAV63xsvmauY=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useCallback","useState","ReactFlow","ReactFlowProvider","addEdge","MiniMap","Controls","Background","useNodesState","useEdgesState","MarkerType","nanoid","jsxDEV","_jsxDEV","App","_s","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","selectedNodeId","setSelectedNodeId","label","setLabel","capture","setCapture","next","setNext","expectedInputs","setExpectedInputs","inputMapping","setInputMapping","followUpPrompt","setFollowUpPrompt","followUpCapture","setFollowUpCapture","gpt","setGpt","end","setEnd","onConnect","params","prompt","eds","type","markerEnd","ArrowClosed","onNodeClick","_","node","_n$data$gpt","id","n","find","data","expected_inputs","join","JSON","stringify","input_mapping","follow_up_prompt","follow_up_capture","enabled","handleNodeUpdate","inputs","split","map","i","trim","filter","Boolean","inputMap","parse","nds","addNewNode","newId","newNode","position","x","Math","random","y","exportToJson","exported","forEach","nodeData","message","options","edge","source","target","Object","keys","length","blob","Blob","url","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","handleFileUpload","event","file","files","reader","FileReader","onload","e","json","result","alert","rawNodes","importedNodes","entries","index","floor","generatedEdges","sourceId","targetId","push","err","readAsText","nodeTypes","default","style","padding","border","borderRadius","background","minWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","display","height","width","fitView","onClick","rows","value","onChange","checked","accept","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/mindpeace-designer/src/App.js"],"sourcesContent":["import React, { useCallback, useState } from 'react';\nimport ReactFlow, {\n  ReactFlowProvider,\n  addEdge,\n  MiniMap,\n  Controls,\n  Background,\n  useNodesState,\n  useEdgesState,\n  MarkerType,\n} from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport { nanoid } from 'nanoid';\n\nconst App = () => {\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const [selectedNodeId, setSelectedNodeId] = useState(null);\n  const [label, setLabel] = useState('');\n  const [capture, setCapture] = useState('');\n  const [next, setNext] = useState('');\n  const [expectedInputs, setExpectedInputs] = useState('');\n  const [inputMapping, setInputMapping] = useState('');\n  const [followUpPrompt, setFollowUpPrompt] = useState('');\n  const [followUpCapture, setFollowUpCapture] = useState('');\n  const [gpt, setGpt] = useState(false);\n  const [end, setEnd] = useState(false);\n\n  const onConnect = useCallback(\n    (params) => {\n      const label = prompt('Label for this edge (e.g., \"yes\", \"no\")');\n      setEdges((eds) =>\n        addEdge(\n          {\n            ...params,\n            label: label || '',\n            type: 'default',\n            markerEnd: {\n              type: MarkerType.ArrowClosed,\n            },\n          },\n          eds\n        )\n      );\n    },\n    [setEdges]\n  );\n\n  const onNodeClick = useCallback((_, node) => {\n    setSelectedNodeId(node.id);\n    const n = nodes.find((n) => n.id === node.id);\n    setLabel(n.data.label || '');\n    setCapture(n.data.capture || '');\n    setNext(n.data.next || '');\n    setExpectedInputs((n.data.expected_inputs || []).join(', '));\n    setInputMapping(JSON.stringify(n.data.input_mapping || {}, null, 2));\n    setFollowUpPrompt(n.data.follow_up_prompt || '');\n    setFollowUpCapture(n.data.follow_up_capture || '');\n    setGpt(n.data.gpt?.enabled || false);\n    setEnd(n.data.end || false);\n  }, [nodes]);\n\n  const handleNodeUpdate = () => {\n    const inputs = expectedInputs.split(',').map((i) => i.trim()).filter(Boolean);\n    let inputMap = {};\n    try {\n      inputMap = JSON.parse(inputMapping || '{}');\n    } catch {}\n\n    setNodes((nds) =>\n      nds.map((node) =>\n        node.id === selectedNodeId\n          ? {\n              ...node,\n              data: {\n                ...node.data,\n                label,\n                capture,\n                next,\n                expected_inputs: inputs,\n                input_mapping: inputMap,\n                follow_up_prompt: followUpPrompt,\n                follow_up_capture: followUpCapture,\n                gpt: gpt ? { enabled: true } : null,\n                end,\n              },\n            }\n          : node\n      )\n    );\n  };\n\n  const addNewNode = () => {\n    const newId = nanoid(4);\n    const newNode = {\n      id: newId,\n      type: 'default',\n      data: {\n        label: `New Node ${newId}`,\n      },\n      position: {\n        x: Math.random() * 400,\n        y: Math.random() * 400,\n      }\n    };\n    setNodes((nds) => [...nds, newNode]);\n  };\n\n  const exportToJson = () => {\n    const exported = {\n      nodes: {},\n    };\n\n    nodes.forEach((node) => {\n      const nodeData = {\n        message: node.data.label || '',\n      };\n      if (node.data.capture) nodeData.capture = node.data.capture;\n      if (node.data.next) nodeData.next = node.data.next;\n      if (node.data.expected_inputs) nodeData.expected_inputs = node.data.expected_inputs;\n      if (node.data.input_mapping) nodeData.input_mapping = node.data.input_mapping;\n      if (node.data.follow_up_prompt) nodeData.follow_up_prompt = node.data.follow_up_prompt;\n      if (node.data.follow_up_capture) nodeData.follow_up_capture = node.data.follow_up_capture;\n      if (node.data.gpt) nodeData.gpt = node.data.gpt;\n      if (node.data.end) nodeData.end = node.data.end;\n\n      // derive options from edges\n      const options = {};\n      edges.forEach((edge) => {\n        if (edge.source === node.id && edge.label) {\n          options[edge.label] = edge.target;\n        }\n      });\n      if (Object.keys(options).length > 0) {\n        nodeData.options = options;\n      }\n\n      exported.nodes[node.id] = nodeData;\n    });\n\n    const blob = new Blob([JSON.stringify(exported, null, 2)], { type: 'application/json' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'conversation_data.json';\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n\n  const handleFileUpload = (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      try {\n        const json = JSON.parse(e.target.result);\n        if (!json.nodes) return alert('Invalid file format');\n\n        const rawNodes = json.nodes;\n\n        const importedNodes = Object.entries(rawNodes).map(([id, node], index) => ({\n          id,\n          type: 'default',\n          data: {\n            label: node.message || '',\n            capture: node.capture || '',\n            next: node.next || '',\n            expected_inputs: node.expected_inputs || [],\n            input_mapping: node.input_mapping || {},\n            follow_up_prompt: node.follow_up_prompt || '',\n            follow_up_capture: node.follow_up_capture || '',\n            gpt: node.gpt || null,\n            end: node.end || false,\n          },\n          position: {\n            x: (index % 4) * 250,\n            y: Math.floor(index / 4) * 150,\n          }\n        }));\n\n        const generatedEdges = [];\n        Object.entries(rawNodes).forEach(([sourceId, node]) => {\n          if (node.options) {\n            Object.entries(node.options).forEach(([label, targetId]) => {\n              generatedEdges.push({\n                id: `${sourceId}-${targetId}-${label}`,\n                source: sourceId,\n                target: targetId,\n                label,\n                type: 'default',\n                markerEnd: {\n                  type: MarkerType.ArrowClosed,\n                }\n              });\n            });\n          }\n          if (node.next) {\n            generatedEdges.push({\n              id: `${sourceId}-${node.next}`,\n              source: sourceId,\n              target: node.next,\n              type: 'default',\n              markerEnd: {\n                type: MarkerType.ArrowClosed,\n              }\n            });\n          }\n        });\n\n        setNodes(importedNodes);\n        setEdges(generatedEdges);\n        setSelectedNodeId(null);\n      } catch (err) {\n        alert('Failed to parse file.');\n      }\n    };\n    reader.readAsText(file);\n  };\n\n  const nodeTypes = {\n    default: ({ id, data }) => (\n      <div style={{ padding: 10, border: '2px solid #333', borderRadius: 8, background: '#fff', minWidth: 150 }}>\n        <strong>ID: {id}</strong>\n        <div>{data.label}</div>\n      </div>\n    )\n  };\n\n  return (\n    <ReactFlowProvider>\n      <div style={{ display: 'flex', height: '100vh' }}>\n        <div style={{ width: '75%', height: '100%' }}>\n          <ReactFlow\n            nodes={nodes}\n            edges={edges}\n            onNodesChange={onNodesChange}\n            onEdgesChange={onEdgesChange}\n            onConnect={onConnect}\n            onNodeClick={onNodeClick}\n            nodeTypes={nodeTypes}\n            fitView\n          >\n            <MiniMap />\n            <Controls />\n            <Background />\n          </ReactFlow>\n        </div>\n        <div style={{ width: '25%', padding: 10, background: '#f9f9f9' }}>\n          <h3>Node Editor</h3>\n          <button onClick={addNewNode}>➕ Add Node</button><br /><br />\n          <label>Message:</label><br />\n          <textarea rows={3} value={label} onChange={(e) => setLabel(e.target.value)} style={{ width: '100%' }} /><br />\n          <label>Capture Field:</label><br />\n          <input value={capture} onChange={(e) => setCapture(e.target.value)} style={{ width: '100%' }} /><br />\n          <label>Next Node ID:</label><br />\n          <input value={next} onChange={(e) => setNext(e.target.value)} style={{ width: '100%' }} /><br />\n          <label>Expected Inputs (comma separated):</label><br />\n          <input value={expectedInputs} onChange={(e) => setExpectedInputs(e.target.value)} style={{ width: '100%' }} /><br />\n          <label>Input Mapping (JSON):</label><br />\n          <textarea rows={3} value={inputMapping} onChange={(e) => setInputMapping(e.target.value)} style={{ width: '100%' }} /><br />\n          <label>Follow-up Prompt:</label><br />\n          <input value={followUpPrompt} onChange={(e) => setFollowUpPrompt(e.target.value)} style={{ width: '100%' }} /><br />\n          <label>Follow-up Capture:</label><br />\n          <input value={followUpCapture} onChange={(e) => setFollowUpCapture(e.target.value)} style={{ width: '100%' }} /><br />\n          <label><input type=\"checkbox\" checked={gpt} onChange={() => setGpt(!gpt)} /> GPT Enabled</label><br />\n          <label><input type=\"checkbox\" checked={end} onChange={() => setEnd(!end)} /> End Node</label><br /><br />\n          <button onClick={handleNodeUpdate}>💾 Update Node</button><br /><br />\n          <button onClick={exportToJson}>📤 Export JSON</button><br /><br />\n          <input type=\"file\" accept=\".json\" onChange={handleFileUpload} />\n        </div>\n      </div>\n    </ReactFlowProvider>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}