{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\mindpeace-designer\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useCallback, useState } from 'react';\nimport ReactFlow, { addEdge, Background, Controls, MiniMap, useEdgesState, useNodesState, Handle } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport CustomEdge from './CustomEdge'; // ✅ NEW: import custom edge\n\n// Custom node component that includes editable message\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CustomNode = ({\n  id,\n  data,\n  isConnectable,\n  selected\n}) => {\n  _s();\n  const [message, setMessage] = useState(data.message);\n  const [capture, setCapture] = useState(data.capture);\n  const [next, setNext] = useState(data.next);\n  const [end, setEnd] = useState(data.end);\n\n  // Handle message change\n  const handleMessageChange = e => {\n    setMessage(e.target.value);\n    data.message = e.target.value; // Update parent node data\n  };\n\n  // Handle capture, next, and end changes\n  const handleCaptureChange = e => setCapture(e.target.value);\n  const handleNextChange = e => setNext(e.target.value);\n  const handleEndChange = e => setEnd(e.target.checked);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '10px',\n      background: '#fff',\n      borderRadius: '5px',\n      border: selected ? '2px solid #4CAF50' : '1px solid #ccc'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [\"Node \", id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '5px 0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Message:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: message,\n        onChange: handleMessageChange,\n        style: {\n          width: '100%',\n          padding: '5px',\n          marginBottom: '5px'\n        },\n        placeholder: \"Enter the message here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '5px 0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Capture:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: capture,\n        onChange: handleCaptureChange,\n        style: {\n          width: '100%',\n          padding: '5px',\n          marginBottom: '5px'\n        },\n        placeholder: \"Capture Field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '5px 0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Next Node:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: next,\n        onChange: handleNextChange,\n        style: {\n          width: '100%',\n          padding: '5px',\n          marginBottom: '5px'\n        },\n        placeholder: \"Next Node ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '5px 0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"End Node:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: end,\n        onChange: handleEndChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Handle, {\n      type: \"source\",\n      position: \"right\",\n      isConnectable: isConnectable\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Handle, {\n      type: \"target\",\n      position: \"left\",\n      isConnectable: isConnectable\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n// Initial dummy data\n_s(CustomNode, \"4XhAChbNJGAo2zpQTWCF3ZpsFzU=\");\n_c = CustomNode;\nconst initialNodes = [{\n  id: '1',\n  position: {\n    x: 250,\n    y: 5\n  },\n  data: {\n    label: 'Start Node',\n    message: 'Hello! Do you want to continue? (Yes/No)',\n    capture: '',\n    next: '',\n    end: false\n  },\n  type: 'customNode'\n}, {\n  id: '2',\n  position: {\n    x: 100,\n    y: 100\n  },\n  data: {\n    label: 'Second Node',\n    message: 'Would you like to share your name?',\n    capture: 'name',\n    next: '',\n    end: false\n  },\n  type: 'customNode'\n}];\nconst initialEdges = [{\n  id: 'e1-2',\n  source: '1',\n  target: '2',\n  data: {\n    label: 'yes'\n  }\n}];\nfunction App() {\n  _s2();\n  var _selectedEdge$data;\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [selectedEdge, setSelectedEdge] = useState(null);\n\n  // ✅ Edge type mapping\n  const edgeTypes = {\n    custom: CustomEdge\n  };\n  const nodeTypes = {\n    customNode: CustomNode // Custom node definition\n  };\n\n  // Handle new connections with default label\n  const onConnect = useCallback(params => setEdges(eds => addEdge({\n    ...params,\n    data: {\n      label: 'Option'\n    },\n    type: 'custom'\n  }, eds)), [setEdges]);\n\n  // Node click selects node\n  const onNodeClick = useCallback((event, node) => {\n    setSelectedNode(node);\n    setSelectedEdge(null);\n  }, []);\n\n  // Edge click selects edge\n  const onEdgeClick = useCallback((event, edge) => {\n    event.stopPropagation();\n    setSelectedEdge(edge);\n    setSelectedNode(null);\n  }, []);\n\n  // Export to conversation_tree.json\n  const exportJSON = () => {\n    const conversationData = {\n      settings: {\n        default_gpt_model: \"gpt-3.5-turbo\",\n        default_system_prompt: \"You are MindPeace, a friendly, compassionate mental health support assistant. \" + \"Your role is to listen, validate, and gently guide the user to talk about their feelings, stress, anxiety, or mental well-being. \" + \"You must refuse to answer any question unrelated to mental health. If asked about such unrelated topics (like sports, weather, celebrities, trivia, general knowledge), politely explain that you are here only to help them with their mental health and invite them to share how they feel. \" + \"If the user asks for links or resources specifically about mental health topics (like relaxation exercises, meditation, breathing techniques), you must share at least 2 specific example YouTube links in your reply. Do not just suggest search terms. \" + \"Always address the user by their first name only in normal conversation. \" + \"If the user asks about their **name** or **full name**, respond politely with their full stored name. \" + \"If the user asks about **any other personal information** (like email, age), do NOT reveal it. Instead, explain you must protect their privacy due to GDPR. \" + \"You also remember **user's shared problems**. If the user asks 'what problems did I share with you?', list all their problems. \" + \"IMPORTANT: Each time you reply, check if the user's latest message includes NEW mental health issues. \" + \"If so, you MUST also output a JSON with a 'new_problems' list of any newly detected issues in the format: \" + \"{'new_problems': [{'type': 'Panic Attacks', 'details': 'seeing ex girlfriend triggers panic'}]} \" + \"Also include your normal human-friendly reply in a 'reply' field. \" + \"Always return valid JSON with 'reply' and optional 'new_problems'.\",\n        context_includes: [\"history\", \"user_state\", \"problems\"]\n      },\n      variables: {\n        name: \"\",\n        first_name: \"\",\n        email: \"\",\n        age: \"\",\n        problem_type: \"\",\n        problem_details: \"\",\n        intensity: \"\",\n        problems: []\n      },\n      nodes: {}\n    };\n    const optionsMap = {};\n    edges.forEach(edge => {\n      var _edge$data;\n      if (!optionsMap[edge.source]) {\n        optionsMap[edge.source] = {};\n      }\n      optionsMap[edge.source][((_edge$data = edge.data) === null || _edge$data === void 0 ? void 0 : _edge$data.label) || 'Option'] = edge.target;\n    });\n    nodes.forEach(node => {\n      const {\n        message,\n        capture,\n        next,\n        end\n      } = node.data;\n      const nodeData = {\n        message: message || '',\n        options: optionsMap[node.id] || {},\n        capture: capture || '',\n        next: next || '',\n        end: end || false\n      };\n      conversationData.nodes[node.id] = nodeData;\n    });\n    const json = JSON.stringify(conversationData, null, 2);\n    const blob = new Blob([json], {\n      type: 'application/json'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'conversation_data.json';\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100vh',\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '10px',\n        background: '#eee',\n        borderBottom: '1px solid #ccc'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addNewNode,\n        style: {\n          marginRight: '10px',\n          padding: '8px 16px',\n          backgroundColor: '#2196F3',\n          color: 'white',\n          border: 'none',\n          borderRadius: '4px',\n          cursor: 'pointer'\n        },\n        children: \"Add Node\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: deleteSelectedNode,\n        style: {\n          padding: '8px 16px',\n          backgroundColor: '#f44336',\n          color: 'white',\n          border: 'none',\n          borderRadius: '4px',\n          cursor: 'pointer'\n        },\n        children: \"Delete Selected Node\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        display: 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n          nodes: nodes,\n          edges: edges,\n          onNodesChange: onNodesChange,\n          onEdgesChange: onEdgesChange,\n          onConnect: onConnect,\n          onNodeClick: onNodeClick,\n          onEdgeClick: onEdgeClick,\n          fitView: true,\n          edgeTypes: edgeTypes,\n          nodeTypes: nodeTypes // Custom node type added here\n          ,\n          defaultEdgeOptions: {\n            type: 'custom'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), (selectedNode || selectedEdge) && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '300px',\n          padding: '15px',\n          background: '#f4f4f4',\n          borderLeft: '1px solid #ccc',\n          overflowY: 'auto'\n        },\n        children: [selectedNode && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Node Editor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"ID:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 20\n            }, this), \" \", selectedNode.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Message:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: selectedNode.data.message,\n            onChange: e => handleFieldChange('message', e.target.value),\n            rows: 4,\n            style: {\n              width: '100%',\n              marginBottom: '10px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Capture Field:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: selectedNode.data.capture,\n            onChange: e => handleFieldChange('capture', e.target.value),\n            style: {\n              width: '100%',\n              marginBottom: '10px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Next Node:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: selectedNode.data.next,\n            onChange: e => handleFieldChange('next', e.target.value),\n            style: {\n              width: '100%',\n              marginBottom: '10px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'block',\n              marginTop: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: selectedNode.data.end,\n              onChange: e => handleFieldChange('end', e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 19\n            }, this), ' ', \"End Node\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), selectedEdge && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Edge Editor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"ID:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 20\n            }, this), \" \", selectedEdge.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Label:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: ((_selectedEdge$data = selectedEdge.data) === null || _selectedEdge$data === void 0 ? void 0 : _selectedEdge$data.label) || '',\n            onChange: e => handleEdgeLabelChange(e.target.value),\n            style: {\n              width: '100%',\n              marginBottom: '10px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: exportJSON,\n        style: {\n          position: 'fixed',\n          bottom: '20px',\n          right: '20px',\n          padding: '10px 20px',\n          backgroundColor: '#4CAF50',\n          color: 'white',\n          border: 'none',\n          borderRadius: '5px',\n          cursor: 'pointer'\n        },\n        children: \"Export to JSON\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 221,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"jZs4SMGfl2c/kkafhubkYD6glNs=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"CustomNode\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useCallback","useState","ReactFlow","addEdge","Background","Controls","MiniMap","useEdgesState","useNodesState","Handle","CustomEdge","jsxDEV","_jsxDEV","Fragment","_Fragment","CustomNode","id","data","isConnectable","selected","_s","message","setMessage","capture","setCapture","next","setNext","end","setEnd","handleMessageChange","e","target","value","handleCaptureChange","handleNextChange","handleEndChange","checked","style","padding","background","borderRadius","border","children","fileName","_jsxFileName","lineNumber","columnNumber","margin","type","onChange","width","marginBottom","placeholder","position","_c","initialNodes","x","y","label","initialEdges","source","App","_s2","_selectedEdge$data","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","selectedNode","setSelectedNode","selectedEdge","setSelectedEdge","edgeTypes","custom","nodeTypes","customNode","onConnect","params","eds","onNodeClick","event","node","onEdgeClick","edge","stopPropagation","exportJSON","conversationData","settings","default_gpt_model","default_system_prompt","context_includes","variables","name","first_name","email","age","problem_type","problem_details","intensity","problems","optionsMap","forEach","_edge$data","nodeData","options","json","JSON","stringify","blob","Blob","url","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","display","flexDirection","height","borderBottom","onClick","addNewNode","marginRight","backgroundColor","color","cursor","deleteSelectedNode","flex","fitView","defaultEdgeOptions","borderLeft","overflowY","handleFieldChange","rows","marginTop","handleEdgeLabelChange","bottom","right","_c2","$RefreshReg$"],"sources":["C:/Users/User/Desktop/mindpeace-designer/src/App.js"],"sourcesContent":["import React, { useCallback, useState } from 'react';\nimport ReactFlow, {\n  addEdge,\n  Background,\n  Controls,\n  MiniMap,\n  useEdgesState,\n  useNodesState,\n  Handle\n} from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport CustomEdge from './CustomEdge'; // ✅ NEW: import custom edge\n\n// Custom node component that includes editable message\nconst CustomNode = ({ id, data, isConnectable, selected }) => {\n  const [message, setMessage] = useState(data.message);\n  const [capture, setCapture] = useState(data.capture);\n  const [next, setNext] = useState(data.next);\n  const [end, setEnd] = useState(data.end);\n\n  // Handle message change\n  const handleMessageChange = (e) => {\n    setMessage(e.target.value);\n    data.message = e.target.value; // Update parent node data\n  };\n\n  // Handle capture, next, and end changes\n  const handleCaptureChange = (e) => setCapture(e.target.value);\n  const handleNextChange = (e) => setNext(e.target.value);\n  const handleEndChange = (e) => setEnd(e.target.checked);\n\n  return (\n    <div style={{ padding: '10px', background: '#fff', borderRadius: '5px', border: selected ? '2px solid #4CAF50' : '1px solid #ccc' }}>\n      <div>\n        <strong>Node {id}</strong>\n      </div>\n      <div style={{ margin: '5px 0' }}>\n        <label>Message:</label>\n        <input \n          type=\"text\" \n          value={message} \n          onChange={handleMessageChange} \n          style={{ width: '100%', padding: '5px', marginBottom: '5px' }} \n          placeholder=\"Enter the message here\" \n        />\n      </div>\n      <div style={{ margin: '5px 0' }}>\n        <label>Capture:</label>\n        <input \n          type=\"text\" \n          value={capture} \n          onChange={handleCaptureChange} \n          style={{ width: '100%', padding: '5px', marginBottom: '5px' }} \n          placeholder=\"Capture Field\" \n        />\n      </div>\n      <div style={{ margin: '5px 0' }}>\n        <label>Next Node:</label>\n        <input \n          type=\"text\" \n          value={next} \n          onChange={handleNextChange} \n          style={{ width: '100%', padding: '5px', marginBottom: '5px' }} \n          placeholder=\"Next Node ID\" \n        />\n      </div>\n      <div style={{ margin: '5px 0' }}>\n        <label>End Node:</label>\n        <input \n          type=\"checkbox\" \n          checked={end} \n          onChange={handleEndChange} \n        />\n      </div>\n      <Handle type=\"source\" position=\"right\" isConnectable={isConnectable} />\n      <Handle type=\"target\" position=\"left\" isConnectable={isConnectable} />\n    </div>\n  );\n};\n\n// Initial dummy data\nconst initialNodes = [\n  {\n    id: '1',\n    position: { x: 250, y: 5 },\n    data: {\n      label: 'Start Node',\n      message: 'Hello! Do you want to continue? (Yes/No)',\n      capture: '',\n      next: '',\n      end: false\n    },\n    type: 'customNode'\n  },\n  {\n    id: '2',\n    position: { x: 100, y: 100 },\n    data: {\n      label: 'Second Node',\n      message: 'Would you like to share your name?',\n      capture: 'name',\n      next: '',\n      end: false\n    },\n    type: 'customNode'\n  }\n];\n\nconst initialEdges = [\n  { id: 'e1-2', source: '1', target: '2', data: { label: 'yes' } }\n];\n\nfunction App() {\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [selectedEdge, setSelectedEdge] = useState(null);\n\n  // ✅ Edge type mapping\n  const edgeTypes = {\n    custom: CustomEdge\n  };\n\n  const nodeTypes = {\n    customNode: CustomNode, // Custom node definition\n  };\n\n  // Handle new connections with default label\n  const onConnect = useCallback(\n    (params) =>\n      setEdges((eds) =>\n        addEdge(\n          { ...params, data: { label: 'Option' }, type: 'custom' },\n          eds\n        )\n      ),\n    [setEdges]\n  );\n\n  // Node click selects node\n  const onNodeClick = useCallback((event, node) => {\n    setSelectedNode(node);\n    setSelectedEdge(null);\n  }, []);\n\n  // Edge click selects edge\n  const onEdgeClick = useCallback((event, edge) => {\n    event.stopPropagation();\n    setSelectedEdge(edge);\n    setSelectedNode(null);\n  }, []);\n\n  // Export to conversation_tree.json\n  const exportJSON = () => {\n    const conversationData = {\n      settings: {\n        default_gpt_model: \"gpt-3.5-turbo\",\n        default_system_prompt: (\n          \"You are MindPeace, a friendly, compassionate mental health support assistant. \" +\n          \"Your role is to listen, validate, and gently guide the user to talk about their feelings, stress, anxiety, or mental well-being. \" +\n          \"You must refuse to answer any question unrelated to mental health. If asked about such unrelated topics (like sports, weather, celebrities, trivia, general knowledge), politely explain that you are here only to help them with their mental health and invite them to share how they feel. \" +\n          \"If the user asks for links or resources specifically about mental health topics (like relaxation exercises, meditation, breathing techniques), you must share at least 2 specific example YouTube links in your reply. Do not just suggest search terms. \" +\n          \"Always address the user by their first name only in normal conversation. \" +\n          \"If the user asks about their **name** or **full name**, respond politely with their full stored name. \" +\n          \"If the user asks about **any other personal information** (like email, age), do NOT reveal it. Instead, explain you must protect their privacy due to GDPR. \" +\n          \"You also remember **user's shared problems**. If the user asks 'what problems did I share with you?', list all their problems. \" +\n          \"IMPORTANT: Each time you reply, check if the user's latest message includes NEW mental health issues. \" +\n          \"If so, you MUST also output a JSON with a 'new_problems' list of any newly detected issues in the format: \" +\n          \"{'new_problems': [{'type': 'Panic Attacks', 'details': 'seeing ex girlfriend triggers panic'}]} \" +\n          \"Also include your normal human-friendly reply in a 'reply' field. \" +\n          \"Always return valid JSON with 'reply' and optional 'new_problems'.\"\n        ),\n        context_includes: [\"history\", \"user_state\", \"problems\"]\n      },\n      variables: {\n        name: \"\",\n        first_name: \"\",\n        email: \"\",\n        age: \"\",\n        problem_type: \"\",\n        problem_details: \"\",\n        intensity: \"\",\n        problems: []\n      },\n      nodes: {}\n    };\n\n    const optionsMap = {};\n    edges.forEach((edge) => {\n      if (!optionsMap[edge.source]) {\n        optionsMap[edge.source] = {};\n      }\n      optionsMap[edge.source][edge.data?.label || 'Option'] = edge.target;\n    });\n\n    nodes.forEach((node) => {\n      const { message, capture, next, end } = node.data;\n\n      const nodeData = {\n        message: message || '',\n        options: optionsMap[node.id] || {},\n        capture: capture || '',\n        next: next || '',\n        end: end || false\n      };\n\n      conversationData.nodes[node.id] = nodeData;\n    });\n\n    const json = JSON.stringify(conversationData, null, 2);\n    const blob = new Blob([json], { type: 'application/json' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'conversation_data.json';\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n\n  return (\n    <div style={{ display: 'flex', flexDirection: 'column', height: '100vh', width: '100%' }}>\n      <div style={{ padding: '10px', background: '#eee', borderBottom: '1px solid #ccc' }}>\n        <button\n          onClick={addNewNode}\n          style={{\n            marginRight: '10px',\n            padding: '8px 16px',\n            backgroundColor: '#2196F3',\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer'\n          }}\n        >\n          Add Node\n        </button>\n\n        <button\n          onClick={deleteSelectedNode}\n          style={{\n            padding: '8px 16px',\n            backgroundColor: '#f44336',\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer'\n          }}\n        >\n          Delete Selected Node\n        </button>\n      </div>\n\n      <div style={{ flex: 1, display: 'flex' }}>\n        <div style={{ flex: 1 }}>\n          <ReactFlow\n            nodes={nodes}\n            edges={edges}\n            onNodesChange={onNodesChange}\n            onEdgesChange={onEdgesChange}\n            onConnect={onConnect}\n            onNodeClick={onNodeClick}\n            onEdgeClick={onEdgeClick}\n            fitView\n            edgeTypes={edgeTypes}\n            nodeTypes={nodeTypes} // Custom node type added here\n            defaultEdgeOptions={{ type: 'custom' }}\n          >\n            <Background />\n            <Controls />\n            <MiniMap />\n          </ReactFlow>\n        </div>\n\n        {(selectedNode || selectedEdge) && (\n          <div\n            style={{\n              width: '300px',\n              padding: '15px',\n              background: '#f4f4f4',\n              borderLeft: '1px solid #ccc',\n              overflowY: 'auto'\n            }}\n          >\n            {selectedNode && (\n              <>\n                <h3>Node Editor</h3>\n                <p><strong>ID:</strong> {selectedNode.id}</p>\n\n                <label>Message:</label>\n                <textarea\n                  value={selectedNode.data.message}\n                  onChange={(e) => handleFieldChange('message', e.target.value)}\n                  rows={4}\n                  style={{ width: '100%', marginBottom: '10px' }}\n                />\n\n                <label>Capture Field:</label>\n                <input\n                  type=\"text\"\n                  value={selectedNode.data.capture}\n                  onChange={(e) => handleFieldChange('capture', e.target.value)}\n                  style={{ width: '100%', marginBottom: '10px' }}\n                />\n\n                <label>Next Node:</label>\n                <input\n                  type=\"text\"\n                  value={selectedNode.data.next}\n                  onChange={(e) => handleFieldChange('next', e.target.value)}\n                  style={{ width: '100%', marginBottom: '10px' }}\n                />\n\n                <label style={{ display: 'block', marginTop: '10px' }}>\n                  <input\n                    type=\"checkbox\"\n                    checked={selectedNode.data.end}\n                    onChange={(e) => handleFieldChange('end', e.target.checked)}\n                  />{' '}\n                  End Node\n                </label>\n              </>\n            )}\n\n            {selectedEdge && (\n              <>\n                <h3>Edge Editor</h3>\n                <p><strong>ID:</strong> {selectedEdge.id}</p>\n\n                <label>Label:</label>\n                <input\n                  type=\"text\"\n                  value={selectedEdge.data?.label || ''}\n                  onChange={(e) => handleEdgeLabelChange(e.target.value)}\n                  style={{ width: '100%', marginBottom: '10px' }}\n                />\n              </>\n            )}\n          </div>\n        )}\n\n        <button\n          onClick={exportJSON}\n          style={{\n            position: 'fixed',\n            bottom: '20px',\n            right: '20px',\n            padding: '10px 20px',\n            backgroundColor: '#4CAF50',\n            color: 'white',\n            border: 'none',\n            borderRadius: '5px',\n            cursor: 'pointer'\n          }}\n        >\n          Export to JSON\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}