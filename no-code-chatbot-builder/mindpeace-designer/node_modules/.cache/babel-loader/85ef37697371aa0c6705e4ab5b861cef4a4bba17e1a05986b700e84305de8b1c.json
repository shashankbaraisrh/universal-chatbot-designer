{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\mindpeace-designer\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState } from \"react\";\nimport ReactFlow, { MiniMap, Controls, Background, useNodesState, useEdgesState, addEdge } from \"reactflow\";\nimport \"reactflow/dist/style.css\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet idCounter = 1;\nexport default function App() {\n  _s();\n  const initialNode = {\n    id: \"1\",\n    type: \"default\",\n    position: {\n      x: 250,\n      y: 100\n    },\n    data: {\n      label: \"Hi there, I’m MindPeace!\"\n    }\n  };\n  const [nodes, setNodes, onNodesChange] = useNodesState([initialNode]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const onConnect = useCallback(params => setEdges(eds => addEdge(params, eds)), [setEdges]);\n  const addNewNode = () => {\n    const newId = (++idCounter).toString();\n    const newNode = {\n      id: newId,\n      type: \"default\",\n      position: {\n        x: Math.random() * 400 + 100,\n        y: Math.random() * 300 + 100\n      },\n      data: {\n        label: `This is node ${newId}`\n      }\n    };\n    setNodes(nds => [...nds, newNode]);\n  };\n  const exportJson = () => {\n    const json = {\n      settings: {\n        system_prompt: \"You are MindPeace, a compassionate mental health assistant...\",\n        gpt_model: \"gpt-3.5-turbo\"\n      },\n      nodes: {}\n    };\n    nodes.forEach(node => {\n      json.nodes[node.id] = {\n        message: node.data.label,\n        type: \"choice\"\n      };\n    });\n    const dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(json, null, 2));\n    const dlAnchor = document.createElement(\"a\");\n    dlAnchor.setAttribute(\"href\", dataStr);\n    dlAnchor.setAttribute(\"download\", \"conversation.json\");\n    dlAnchor.click();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100vw\",\n      height: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addNewNode,\n        className: \"mr-2 bg-blue-500 text-white px-4 py-1 rounded\",\n        children: \"Add Node\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: exportJson,\n        className: \"bg-green-500 text-white px-4 py-1 rounded\",\n        children: \"Export JSON\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      onNodesChange: onNodesChange,\n      onEdgesChange: onEdgesChange,\n      onConnect: onConnect,\n      fitView: true,\n      children: [/*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"mmoxFmHOvuuD77aIm5gUqDEdUKU=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useCallback","useState","ReactFlow","MiniMap","Controls","Background","useNodesState","useEdgesState","addEdge","jsxDEV","_jsxDEV","idCounter","App","_s","initialNode","id","type","position","x","y","data","label","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","onConnect","params","eds","addNewNode","newId","toString","newNode","Math","random","nds","exportJson","json","settings","system_prompt","gpt_model","forEach","node","message","dataStr","encodeURIComponent","JSON","stringify","dlAnchor","document","createElement","setAttribute","click","style","width","height","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","fitView","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/mindpeace-designer/src/App.js"],"sourcesContent":["import React, { useCallback, useState } from \"react\";\nimport ReactFlow, {\n  MiniMap,\n  Controls,\n  Background,\n  useNodesState,\n  useEdgesState,\n  addEdge,\n} from \"reactflow\";\nimport \"reactflow/dist/style.css\";\nimport \"./index.css\";\n\nlet idCounter = 1;\n\nexport default function App() {\n  const initialNode = {\n    id: \"1\",\n    type: \"default\",\n    position: { x: 250, y: 100 },\n    data: { label: \"Hi there, I’m MindPeace!\" }\n  };\n\n  const [nodes, setNodes, onNodesChange] = useNodesState([initialNode]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n\n  const onConnect = useCallback(\n    (params) => setEdges((eds) => addEdge(params, eds)),\n    [setEdges]\n  );\n\n  const addNewNode = () => {\n    const newId = (++idCounter).toString();\n    const newNode = {\n      id: newId,\n      type: \"default\",\n      position: {\n        x: Math.random() * 400 + 100,\n        y: Math.random() * 300 + 100,\n      },\n      data: { label: `This is node ${newId}` },\n    };\n    setNodes((nds) => [...nds, newNode]);\n  };\n\n  const exportJson = () => {\n    const json = {\n      settings: {\n        system_prompt:\n          \"You are MindPeace, a compassionate mental health assistant...\",\n        gpt_model: \"gpt-3.5-turbo\",\n      },\n      nodes: {},\n    };\n\n    nodes.forEach((node) => {\n      json.nodes[node.id] = {\n        message: node.data.label,\n        type: \"choice\",\n      };\n    });\n\n    const dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(json, null, 2));\n    const dlAnchor = document.createElement(\"a\");\n    dlAnchor.setAttribute(\"href\", dataStr);\n    dlAnchor.setAttribute(\"download\", \"conversation.json\");\n    dlAnchor.click();\n  };\n\n  return (\n    <div style={{ width: \"100vw\", height: \"100vh\" }}>\n      <div className=\"p-2\">\n        <button onClick={addNewNode} className=\"mr-2 bg-blue-500 text-white px-4 py-1 rounded\">\n          Add Node\n        </button>\n        <button onClick={exportJson} className=\"bg-green-500 text-white px-4 py-1 rounded\">\n          Export JSON\n        </button>\n      </div>\n      <ReactFlow\n        nodes={nodes}\n        edges={edges}\n        onNodesChange={onNodesChange}\n        onEdgesChange={onEdgesChange}\n        onConnect={onConnect}\n        fitView\n      >\n        <MiniMap />\n        <Controls />\n        <Background />\n      </ReactFlow>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}