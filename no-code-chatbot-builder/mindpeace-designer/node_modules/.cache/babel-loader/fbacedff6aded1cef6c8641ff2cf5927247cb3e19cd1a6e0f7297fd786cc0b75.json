{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\mindpeace-designer\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState, useMemo } from \"react\";\nimport ReactFlow, { MiniMap, Controls, Background, useNodesState, useEdgesState, addEdge, MarkerType } from \"reactflow\";\nimport \"reactflow/dist/style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialNodes = [{\n  id: \"1\",\n  data: {\n    message: \"Hi there, I’m MindPeace — your friendly mental health support assistant. Would you like to begin our conversation?\",\n    type: \"choice\",\n    options: {},\n    capture: \"\",\n    next: \"\"\n  },\n  position: {\n    x: 250,\n    y: 0\n  },\n  type: \"default\"\n}];\nconst initialEdges = [];\nlet nodeCounter = 2;\nexport default function App() {\n  _s();\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  const [manualEdges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n  const [selectedNodeId, setSelectedNodeId] = useState(null);\n  const [selectedEdgeId, setSelectedEdgeId] = useState(null);\n  const selectedNode = nodes.find(n => n.id === selectedNodeId);\n  const selectedEdge = manualEdges.find(e => e.id === selectedEdgeId);\n  const autoGeneratedEdges = useMemo(() => {\n    const existingConnections = new Set(manualEdges.map(e => `${e.source}->${e.target}`));\n    const autoEdges = [];\n    for (const node of nodes) {\n      var _node$data;\n      const target = (_node$data = node.data) === null || _node$data === void 0 ? void 0 : _node$data.next;\n      if (target && !existingConnections.has(`${node.id}->${target}`)) {\n        autoEdges.push({\n          id: `auto-${node.id}-${target}`,\n          source: node.id,\n          target,\n          animated: false,\n          type: \"default\",\n          style: {\n            strokeDasharray: \"5,5\",\n            stroke: \"#999\"\n          },\n          markerEnd: {\n            type: MarkerType.ArrowClosed\n          },\n          label: \"next\"\n        });\n      }\n    }\n    return autoEdges;\n  }, [nodes, manualEdges]);\n  const allEdges = [...manualEdges, ...autoGeneratedEdges];\n  const onConnect = useCallback(params => {\n    const label = prompt(\"Enter option key for this connection (e.g., yes, no, Stress):\", \"\");\n    if (!label) return;\n    const edgeId = `e${params.source}-${params.target}`;\n    setEdges(eds => addEdge({\n      ...params,\n      id: edgeId,\n      markerEnd: {\n        type: MarkerType.ArrowClosed\n      },\n      label\n    }, eds));\n    setNodes(nds => nds.map(node => {\n      if (node.id === params.source) {\n        const updated = {\n          ...node\n        };\n        if (node.data.type === \"choice\" || node.data.type === \"multi_choice\") {\n          updated.data.options = {\n            ...updated.data.options,\n            [label]: params.target\n          };\n        } else {\n          updated.data.next = params.target;\n        }\n        return updated;\n      }\n      return node;\n    }));\n  }, [setEdges, setNodes]);\n  const addNode = () => {\n    const newId = nodeCounter.toString();\n    nodeCounter++;\n    const newNode = {\n      id: newId,\n      data: {\n        message: `This is node ${newId}`,\n        type: \"choice\",\n        options: {},\n        capture: \"\",\n        next: \"\"\n      },\n      position: {\n        x: 300,\n        y: 100 + nodeCounter * 60\n      },\n      type: \"default\"\n    };\n    setNodes(nds => [...nds, newNode]);\n  };\n  const onNodeClick = (_, node) => {\n    setSelectedNodeId(node.id);\n    setSelectedEdgeId(null);\n  };\n  const onEdgeClick = (_, edge) => {\n    setSelectedEdgeId(edge.id);\n    setSelectedNodeId(null);\n  };\n  const updateNodeField = (field, value) => {\n    setNodes(nds => nds.map(node => {\n      if (node.id === selectedNodeId) {\n        return {\n          ...node,\n          data: {\n            ...node.data,\n            [field]: value\n          }\n        };\n      }\n      return node;\n    }));\n  };\n  const updateEdgeLabel = newLabel => {\n    if (!selectedEdge) return;\n    const oldLabel = selectedEdge.label;\n    const sourceId = selectedEdge.source;\n    const targetId = selectedEdge.target;\n    setEdges(eds => eds.map(edge => edge.id === selectedEdge.id ? {\n      ...edge,\n      label: newLabel\n    } : edge));\n    setNodes(nds => nds.map(node => {\n      if (node.id === sourceId) {\n        const updated = {\n          ...node\n        };\n        if (updated.data.type === \"choice\" || updated.data.type === \"multi_choice\") {\n          const newOptions = {\n            ...updated.data.options\n          };\n          delete newOptions[oldLabel];\n          newOptions[newLabel] = targetId;\n          updated.data.options = newOptions;\n        } else {\n          updated.data.next = targetId;\n        }\n        return updated;\n      }\n      return node;\n    }));\n  };\n  const exportJSON = () => {\n    const output = {\n      settings: {\n        system_prompt: \"You are MindPeace, a compassionate mental health assistant. Based on the user's shared info and emotional state, continue the conversation empathetically. Always respond warmly and supportively.\",\n        gpt_model: \"gpt-3.5-turbo\"\n      },\n      nodes: {}\n    };\n    nodes.forEach(node => {\n      const {\n        id,\n        data\n      } = node;\n      const {\n        message,\n        type,\n        options,\n        capture,\n        next\n      } = data;\n      const nodeObj = {\n        message,\n        type\n      };\n      if (options && Object.keys(options).length > 0) nodeObj.options = options;\n      if (capture) nodeObj.capture = capture;\n      if (next) nodeObj.next = next;\n      output.nodes[id] = nodeObj;\n    });\n    const blob = new Blob([JSON.stringify(output, null, 2)], {\n      type: \"application/json\"\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement(\"a\");\n    link.href = url;\n    link.download = \"conversation_data.json\";\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100vw\",\n      height: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        top: 10,\n        left: 10,\n        zIndex: 20,\n        display: \"flex\",\n        gap: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addNode,\n        style: {\n          backgroundColor: \"#3b82f6\",\n          color: \"white\",\n          padding: \"10px 16px\",\n          borderRadius: \"8px\",\n          fontWeight: \"600\",\n          border: \"none\",\n          cursor: \"pointer\",\n          boxShadow: \"0 2px 6px rgba(0,0,0,0.1)\"\n        },\n        children: \"Add Node\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: exportJSON,\n        style: {\n          backgroundColor: \"#10b981\",\n          color: \"white\",\n          padding: \"10px 16px\",\n          borderRadius: \"8px\",\n          fontWeight: \"600\",\n          border: \"none\",\n          cursor: \"pointer\",\n          boxShadow: \"0 2px 6px rgba(0,0,0,0.1)\"\n        },\n        children: \"Export JSON\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), selectedNode && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        top: 60,\n        left: 10,\n        zIndex: 10,\n        backgroundColor: \"#ffffff\",\n        padding: \"16px\",\n        borderRadius: \"12px\",\n        boxShadow: \"0 4px 12px rgba(0, 0, 0, 0.1)\",\n        width: \"320px\",\n        fontFamily: \"Segoe UI, sans-serif\",\n        border: \"1px solid #e5e7eb\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          marginBottom: \"12px\",\n          fontWeight: \"bold\",\n          fontSize: \"16px\"\n        },\n        children: [\"Editing Node: \", selectedNode.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"12px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            fontSize: \"14px\",\n            fontWeight: \"500\"\n          },\n          children: \"Message:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: selectedNode.data.message,\n          onChange: e => updateNodeField(\"message\", e.target.value),\n          style: {\n            width: \"100%\",\n            height: 60,\n            padding: \"6px\",\n            borderRadius: \"6px\",\n            border: \"1px solid #ccc\",\n            resize: \"vertical\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"12px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            fontSize: \"14px\",\n            fontWeight: \"500\"\n          },\n          children: \"Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedNode.data.type,\n          onChange: e => updateNodeField(\"type\", e.target.value),\n          style: {\n            width: \"100%\",\n            padding: \"6px\",\n            borderRadius: \"6px\",\n            border: \"1px solid #ccc\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"choice\",\n            children: \"choice\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"input\",\n            children: \"input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"multi_choice\",\n            children: \"multi_choice\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"gpt\",\n            children: \"gpt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"end\",\n            children: \"end\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"12px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            fontSize: \"14px\",\n            fontWeight: \"500\"\n          },\n          children: \"Capture Field:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: selectedNode.data.capture,\n          onChange: e => updateNodeField(\"capture\", e.target.value),\n          style: {\n            width: \"100%\",\n            padding: \"6px\",\n            borderRadius: \"6px\",\n            border: \"1px solid #ccc\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            fontSize: \"14px\",\n            fontWeight: \"500\"\n          },\n          children: \"Next Node ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: selectedNode.data.next,\n          onChange: e => updateNodeField(\"next\", e.target.value),\n          style: {\n            width: \"100%\",\n            padding: \"6px\",\n            borderRadius: \"6px\",\n            border: \"1px solid #ccc\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 9\n    }, this), selectedEdge && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        top: 60,\n        left: 350,\n        zIndex: 10,\n        backgroundColor: \"#ffffff\",\n        padding: \"16px\",\n        borderRadius: \"12px\",\n        boxShadow: \"0 4px 12px rgba(0, 0, 0, 0.1)\",\n        width: \"320px\",\n        fontFamily: \"Segoe UI, sans-serif\",\n        border: \"1px solid #e5e7eb\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          marginBottom: \"12px\",\n          fontWeight: \"bold\",\n          fontSize: \"16px\"\n        },\n        children: \"Editing Edge\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            fontSize: \"14px\",\n            fontWeight: \"500\"\n          },\n          children: \"Option Label:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: selectedEdge.label,\n          onChange: e => updateEdgeLabel(e.target.value),\n          style: {\n            width: \"100%\",\n            padding: \"6px\",\n            borderRadius: \"6px\",\n            border: \"1px solid #ccc\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes.map(n => ({\n        ...n,\n        data: {\n          ...n.data,\n          label: n.data.message\n        }\n      })),\n      edges: allEdges,\n      onNodesChange: onNodesChange,\n      onEdgesChange: onEdgesChange,\n      onConnect: onConnect,\n      onNodeClick: onNodeClick,\n      onEdgeClick: onEdgeClick,\n      fitView: true,\n      edgeLabelMode: \"always\",\n      children: [/*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 222,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"0U4sC/rZ4xB9VFjcH5OY5Ry2Myk=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useCallback","useState","useMemo","ReactFlow","MiniMap","Controls","Background","useNodesState","useEdgesState","addEdge","MarkerType","jsxDEV","_jsxDEV","initialNodes","id","data","message","type","options","capture","next","position","x","y","initialEdges","nodeCounter","App","_s","nodes","setNodes","onNodesChange","manualEdges","setEdges","onEdgesChange","selectedNodeId","setSelectedNodeId","selectedEdgeId","setSelectedEdgeId","selectedNode","find","n","selectedEdge","e","autoGeneratedEdges","existingConnections","Set","map","source","target","autoEdges","node","_node$data","has","push","animated","style","strokeDasharray","stroke","markerEnd","ArrowClosed","label","allEdges","onConnect","params","prompt","edgeId","eds","nds","updated","addNode","newId","toString","newNode","onNodeClick","_","onEdgeClick","edge","updateNodeField","field","value","updateEdgeLabel","newLabel","oldLabel","sourceId","targetId","newOptions","exportJSON","output","settings","system_prompt","gpt_model","forEach","nodeObj","Object","keys","length","blob","Blob","JSON","stringify","url","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","removeChild","width","height","children","top","left","zIndex","display","gap","onClick","backgroundColor","color","padding","borderRadius","fontWeight","border","cursor","boxShadow","fileName","_jsxFileName","lineNumber","columnNumber","fontFamily","marginBottom","fontSize","onChange","resize","edges","fitView","edgeLabelMode","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/mindpeace-designer/src/App.js"],"sourcesContent":["import React, { useCallback, useState, useMemo } from \"react\";\nimport ReactFlow, {\n  MiniMap,\n  Controls,\n  Background,\n  useNodesState,\n  useEdgesState,\n  addEdge,\n  MarkerType\n} from \"reactflow\";\nimport \"reactflow/dist/style.css\";\n\nconst initialNodes = [\n  {\n    id: \"1\",\n    data: {\n      message:\n        \"Hi there, I’m MindPeace — your friendly mental health support assistant. Would you like to begin our conversation?\",\n      type: \"choice\",\n      options: {},\n      capture: \"\",\n      next: \"\"\n    },\n    position: { x: 250, y: 0 },\n    type: \"default\"\n  }\n];\n\nconst initialEdges = [];\nlet nodeCounter = 2;\n\nexport default function App() {\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  const [manualEdges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n  const [selectedNodeId, setSelectedNodeId] = useState(null);\n  const [selectedEdgeId, setSelectedEdgeId] = useState(null);\n\n  const selectedNode = nodes.find((n) => n.id === selectedNodeId);\n  const selectedEdge = manualEdges.find((e) => e.id === selectedEdgeId);\n\n  const autoGeneratedEdges = useMemo(() => {\n    const existingConnections = new Set(\n      manualEdges.map((e) => `${e.source}->${e.target}`)\n    );\n    const autoEdges = [];\n\n    for (const node of nodes) {\n      const target = node.data?.next;\n      if (target && !existingConnections.has(`${node.id}->${target}`)) {\n        autoEdges.push({\n          id: `auto-${node.id}-${target}`,\n          source: node.id,\n          target,\n          animated: false,\n          type: \"default\",\n          style: { strokeDasharray: \"5,5\", stroke: \"#999\" },\n          markerEnd: { type: MarkerType.ArrowClosed },\n          label: \"next\"\n        });\n      }\n    }\n    return autoEdges;\n  }, [nodes, manualEdges]);\n\n  const allEdges = [...manualEdges, ...autoGeneratedEdges];\n\n  const onConnect = useCallback(\n    (params) => {\n      const label = prompt(\"Enter option key for this connection (e.g., yes, no, Stress):\", \"\");\n      if (!label) return;\n\n      const edgeId = `e${params.source}-${params.target}`;\n      setEdges((eds) =>\n        addEdge(\n          {\n            ...params,\n            id: edgeId,\n            markerEnd: { type: MarkerType.ArrowClosed },\n            label\n          },\n          eds\n        )\n      );\n\n      setNodes((nds) =>\n        nds.map((node) => {\n          if (node.id === params.source) {\n            const updated = { ...node };\n            if (\n              node.data.type === \"choice\" ||\n              node.data.type === \"multi_choice\"\n            ) {\n              updated.data.options = {\n                ...updated.data.options,\n                [label]: params.target\n              };\n            } else {\n              updated.data.next = params.target;\n            }\n            return updated;\n          }\n          return node;\n        })\n      );\n    },\n    [setEdges, setNodes]\n  );\n\n  const addNode = () => {\n    const newId = nodeCounter.toString();\n    nodeCounter++;\n    const newNode = {\n      id: newId,\n      data: {\n        message: `This is node ${newId}`,\n        type: \"choice\",\n        options: {},\n        capture: \"\",\n        next: \"\"\n      },\n      position: { x: 300, y: 100 + nodeCounter * 60 },\n      type: \"default\"\n    };\n    setNodes((nds) => [...nds, newNode]);\n  };\n\n  const onNodeClick = (_, node) => {\n    setSelectedNodeId(node.id);\n    setSelectedEdgeId(null);\n  };\n\n  const onEdgeClick = (_, edge) => {\n    setSelectedEdgeId(edge.id);\n    setSelectedNodeId(null);\n  };\n\n  const updateNodeField = (field, value) => {\n    setNodes((nds) =>\n      nds.map((node) => {\n        if (node.id === selectedNodeId) {\n          return {\n            ...node,\n            data: {\n              ...node.data,\n              [field]: value\n            }\n          };\n        }\n        return node;\n      })\n    );\n  };\n\n  const updateEdgeLabel = (newLabel) => {\n    if (!selectedEdge) return;\n\n    const oldLabel = selectedEdge.label;\n    const sourceId = selectedEdge.source;\n    const targetId = selectedEdge.target;\n\n    setEdges((eds) =>\n      eds.map((edge) =>\n        edge.id === selectedEdge.id ? { ...edge, label: newLabel } : edge\n      )\n    );\n\n    setNodes((nds) =>\n      nds.map((node) => {\n        if (node.id === sourceId) {\n          const updated = { ...node };\n          if (\n            updated.data.type === \"choice\" ||\n            updated.data.type === \"multi_choice\"\n          ) {\n            const newOptions = { ...updated.data.options };\n            delete newOptions[oldLabel];\n            newOptions[newLabel] = targetId;\n            updated.data.options = newOptions;\n          } else {\n            updated.data.next = targetId;\n          }\n          return updated;\n        }\n        return node;\n      })\n    );\n  };\n\n  const exportJSON = () => {\n    const output = {\n      settings: {\n        system_prompt:\n          \"You are MindPeace, a compassionate mental health assistant. Based on the user's shared info and emotional state, continue the conversation empathetically. Always respond warmly and supportively.\",\n        gpt_model: \"gpt-3.5-turbo\"\n      },\n      nodes: {}\n    };\n\n    nodes.forEach((node) => {\n      const { id, data } = node;\n      const { message, type, options, capture, next } = data;\n      const nodeObj = { message, type };\n      if (options && Object.keys(options).length > 0) nodeObj.options = options;\n      if (capture) nodeObj.capture = capture;\n      if (next) nodeObj.next = next;\n      output.nodes[id] = nodeObj;\n    });\n\n    const blob = new Blob([JSON.stringify(output, null, 2)], {\n      type: \"application/json\"\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement(\"a\");\n    link.href = url;\n    link.download = \"conversation_data.json\";\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  return (\n    <div style={{ width: \"100vw\", height: \"100vh\" }}>\n      <div style={{ position: \"absolute\", top: 10, left: 10, zIndex: 20, display: \"flex\", gap: \"10px\" }}>\n        <button\n          onClick={addNode}\n          style={{\n            backgroundColor: \"#3b82f6\",\n            color: \"white\",\n            padding: \"10px 16px\",\n            borderRadius: \"8px\",\n            fontWeight: \"600\",\n            border: \"none\",\n            cursor: \"pointer\",\n            boxShadow: \"0 2px 6px rgba(0,0,0,0.1)\"\n          }}\n        >\n          Add Node\n        </button>\n        <button\n          onClick={exportJSON}\n          style={{\n            backgroundColor: \"#10b981\",\n            color: \"white\",\n            padding: \"10px 16px\",\n            borderRadius: \"8px\",\n            fontWeight: \"600\",\n            border: \"none\",\n            cursor: \"pointer\",\n            boxShadow: \"0 2px 6px rgba(0,0,0,0.1)\"\n          }}\n        >\n          Export JSON\n        </button>\n      </div>\n\n      {selectedNode && (\n        <div\n          style={{\n            position: \"absolute\",\n            top: 60,\n            left: 10,\n            zIndex: 10,\n            backgroundColor: \"#ffffff\",\n            padding: \"16px\",\n            borderRadius: \"12px\",\n            boxShadow: \"0 4px 12px rgba(0, 0, 0, 0.1)\",\n            width: \"320px\",\n            fontFamily: \"Segoe UI, sans-serif\",\n            border: \"1px solid #e5e7eb\"\n          }}\n        >\n          <h4 style={{ marginBottom: \"12px\", fontWeight: \"bold\", fontSize: \"16px\" }}>\n            Editing Node: {selectedNode.id}\n          </h4>\n\n          <div style={{ marginBottom: \"12px\" }}>\n            <label style={{ fontSize: \"14px\", fontWeight: \"500\" }}>Message:</label>\n            <textarea\n              value={selectedNode.data.message}\n              onChange={(e) => updateNodeField(\"message\", e.target.value)}\n              style={{\n                width: \"100%\",\n                height: 60,\n                padding: \"6px\",\n                borderRadius: \"6px\",\n                border: \"1px solid #ccc\",\n                resize: \"vertical\"\n              }}\n            />\n          </div>\n\n          <div style={{ marginBottom: \"12px\" }}>\n            <label style={{ fontSize: \"14px\", fontWeight: \"500\" }}>Type:</label>\n            <select\n              value={selectedNode.data.type}\n              onChange={(e) => updateNodeField(\"type\", e.target.value)}\n              style={{\n                width: \"100%\",\n                padding: \"6px\",\n                borderRadius: \"6px\",\n                border: \"1px solid #ccc\"\n              }}\n            >\n              <option value=\"choice\">choice</option>\n              <option value=\"input\">input</option>\n              <option value=\"multi_choice\">multi_choice</option>\n              <option value=\"gpt\">gpt</option>\n              <option value=\"end\">end</option>\n            </select>\n          </div>\n\n          <div style={{ marginBottom: \"12px\" }}>\n            <label style={{ fontSize: \"14px\", fontWeight: \"500\" }}>Capture Field:</label>\n            <input\n              type=\"text\"\n              value={selectedNode.data.capture}\n              onChange={(e) => updateNodeField(\"capture\", e.target.value)}\n              style={{\n                width: \"100%\",\n                padding: \"6px\",\n                borderRadius: \"6px\",\n                border: \"1px solid #ccc\"\n              }}\n            />\n          </div>\n\n          <div>\n            <label style={{ fontSize: \"14px\", fontWeight: \"500\" }}>Next Node ID:</label>\n            <input\n              type=\"text\"\n              value={selectedNode.data.next}\n              onChange={(e) => updateNodeField(\"next\", e.target.value)}\n              style={{\n                width: \"100%\",\n                padding: \"6px\",\n                borderRadius: \"6px\",\n                border: \"1px solid #ccc\"\n              }}\n            />\n          </div>\n        </div>\n      )}\n\n      {selectedEdge && (\n        <div\n          style={{\n            position: \"absolute\",\n            top: 60,\n            left: 350,\n            zIndex: 10,\n            backgroundColor: \"#ffffff\",\n            padding: \"16px\",\n            borderRadius: \"12px\",\n            boxShadow: \"0 4px 12px rgba(0, 0, 0, 0.1)\",\n            width: \"320px\",\n            fontFamily: \"Segoe UI, sans-serif\",\n            border: \"1px solid #e5e7eb\"\n          }}\n        >\n          <h4 style={{ marginBottom: \"12px\", fontWeight: \"bold\", fontSize: \"16px\" }}>\n            Editing Edge\n          </h4>\n          <div>\n            <label style={{ fontSize: \"14px\", fontWeight: \"500\" }}>Option Label:</label>\n            <input\n              type=\"text\"\n              value={selectedEdge.label}\n              onChange={(e) => updateEdgeLabel(e.target.value)}\n              style={{\n                width: \"100%\",\n                padding: \"6px\",\n                borderRadius: \"6px\",\n                border: \"1px solid #ccc\"\n              }}\n            />\n          </div>\n        </div>\n      )}\n\n      <ReactFlow\n        nodes={nodes.map((n) => ({\n          ...n,\n          data: { ...n.data, label: n.data.message }\n        }))}\n        edges={allEdges}\n        onNodesChange={onNodesChange}\n        onEdgesChange={onEdgesChange}\n        onConnect={onConnect}\n        onNodeClick={onNodeClick}\n        onEdgeClick={onEdgeClick}\n        fitView\n        edgeLabelMode=\"always\"\n      >\n        <MiniMap />\n        <Controls />\n        <Background />\n      </ReactFlow>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}