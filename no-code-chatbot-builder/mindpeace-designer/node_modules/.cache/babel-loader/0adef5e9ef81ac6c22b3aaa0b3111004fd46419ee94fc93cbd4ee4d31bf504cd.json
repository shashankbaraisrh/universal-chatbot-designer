{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\mindpeace-designer\\\\src\\\\ChatbotPanel.js\";\n// ChatbotPanel.js\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatbotPanel({\n  chatbotReady,\n  chatHistory,\n  userInputs,\n  inputValue,\n  currentNodeId,\n  submittedFlow,\n  setChatHistory,\n  setUserInputs,\n  setCurrentNodeId,\n  setInputValue,\n  handleUserResponse\n}) {\n  const renderChatInput = () => {\n    if (!submittedFlow || !currentNodeId) return null;\n    const node = submittedFlow.nodes[currentNodeId];\n    if (node.type === \"choice\" || node.type === \"multi_choice\") {\n      return Object.keys(node.options || {}).map(opt => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleUserResponse(opt),\n        style: {\n          padding: \"8px\",\n          margin: \"4px\",\n          width: \"100%\",\n          borderRadius: 6,\n          border: \"1px solid #ccc\",\n          background: \"#e0f2fe\",\n          cursor: \"pointer\"\n        },\n        children: opt\n      }, opt, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this));\n    }\n    if (node.type === \"input\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: inputValue,\n          onChange: e => setInputValue(e.target.value),\n          onKeyDown: e => e.key === \"Enter\" && handleUserResponse(inputValue),\n          placeholder: \"Type your answer...\",\n          style: {\n            width: \"100%\",\n            padding: 8,\n            marginBottom: 8,\n            borderRadius: 6,\n            border: \"1px solid #ccc\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleUserResponse(inputValue),\n          style: {\n            width: \"100%\",\n            background: \"#38bdf8\",\n            color: \"white\",\n            borderRadius: 6,\n            padding: \"8px 12px\",\n            border: \"none\",\n            cursor: \"pointer\"\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"320px\",\n      padding: 20,\n      borderLeft: \"1px solid #ddd\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"space-between\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontWeight: \"bold\",\n        marginBottom: 10\n      },\n      children: \"MindPeace Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flexGrow: 1,\n        overflowY: \"auto\",\n        marginBottom: 10,\n        display: \"flex\",\n        flexDirection: \"column\",\n        gap: 10\n      },\n      children: chatbotReady ? chatHistory.map((entry, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          alignSelf: entry.sender === \"user\" ? \"flex-end\" : \"flex-start\",\n          background: entry.sender === \"user\" ? \"#e0f2fe\" : \"#f3f4f6\",\n          padding: 8,\n          borderRadius: 6,\n          maxWidth: \"90%\"\n        },\n        children: entry.message\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Please submit your flow to activate the chatbot.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), chatbotReady && renderChatInput()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_c = ChatbotPanel;\nvar _c;\n$RefreshReg$(_c, \"ChatbotPanel\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ChatbotPanel","chatbotReady","chatHistory","userInputs","inputValue","currentNodeId","submittedFlow","setChatHistory","setUserInputs","setCurrentNodeId","setInputValue","handleUserResponse","renderChatInput","node","nodes","type","Object","keys","options","map","opt","onClick","style","padding","margin","width","borderRadius","border","background","cursor","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","onKeyDown","key","placeholder","marginBottom","color","borderLeft","display","flexDirection","justifyContent","fontWeight","flexGrow","overflowY","gap","entry","index","alignSelf","sender","maxWidth","message","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/mindpeace-designer/src/ChatbotPanel.js"],"sourcesContent":["// ChatbotPanel.js\r\nimport React from \"react\";\r\n\r\nexport default function ChatbotPanel({\r\n  chatbotReady,\r\n  chatHistory,\r\n  userInputs,\r\n  inputValue,\r\n  currentNodeId,\r\n  submittedFlow,\r\n  setChatHistory,\r\n  setUserInputs,\r\n  setCurrentNodeId,\r\n  setInputValue,\r\n  handleUserResponse\r\n}) {\r\n  const renderChatInput = () => {\r\n    if (!submittedFlow || !currentNodeId) return null;\r\n    const node = submittedFlow.nodes[currentNodeId];\r\n    if (node.type === \"choice\" || node.type === \"multi_choice\") {\r\n      return Object.keys(node.options || {}).map((opt) => (\r\n        <button\r\n          key={opt}\r\n          onClick={() => handleUserResponse(opt)}\r\n          style={{\r\n            padding: \"8px\",\r\n            margin: \"4px\",\r\n            width: \"100%\",\r\n            borderRadius: 6,\r\n            border: \"1px solid #ccc\",\r\n            background: \"#e0f2fe\",\r\n            cursor: \"pointer\"\r\n          }}\r\n        >\r\n          {opt}\r\n        </button>\r\n      ));\r\n    }\r\n    if (node.type === \"input\") {\r\n      return (\r\n        <div>\r\n          <input\r\n            value={inputValue}\r\n            onChange={(e) => setInputValue(e.target.value)}\r\n            onKeyDown={(e) => e.key === \"Enter\" && handleUserResponse(inputValue)}\r\n            placeholder=\"Type your answer...\"\r\n            style={{\r\n              width: \"100%\",\r\n              padding: 8,\r\n              marginBottom: 8,\r\n              borderRadius: 6,\r\n              border: \"1px solid #ccc\"\r\n            }}\r\n          />\r\n          <button\r\n            onClick={() => handleUserResponse(inputValue)}\r\n            style={{\r\n              width: \"100%\",\r\n              background: \"#38bdf8\",\r\n              color: \"white\",\r\n              borderRadius: 6,\r\n              padding: \"8px 12px\",\r\n              border: \"none\",\r\n              cursor: \"pointer\"\r\n            }}\r\n          >\r\n            Submit\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"320px\",\r\n        padding: 20,\r\n        borderLeft: \"1px solid #ddd\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"space-between\"\r\n      }}\r\n    >\r\n      <div style={{ fontWeight: \"bold\", marginBottom: 10 }}>MindPeace Chat</div>\r\n      <div\r\n        style={{\r\n          flexGrow: 1,\r\n          overflowY: \"auto\",\r\n          marginBottom: 10,\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          gap: 10\r\n        }}\r\n      >\r\n        {chatbotReady ? (\r\n          chatHistory.map((entry, index) => (\r\n            <div\r\n              key={index}\r\n              style={{\r\n                alignSelf: entry.sender === \"user\" ? \"flex-end\" : \"flex-start\",\r\n                background: entry.sender === \"user\" ? \"#e0f2fe\" : \"#f3f4f6\",\r\n                padding: 8,\r\n                borderRadius: 6,\r\n                maxWidth: \"90%\"\r\n              }}\r\n            >\r\n              {entry.message}\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <div>Please submit your flow to activate the chatbot.</div>\r\n        )}\r\n      </div>\r\n      {chatbotReady && renderChatInput()}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}