{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\mindpeace-designer\\\\src\\\\ChatbotPanel.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ChatbotPanel({\n  chatbotReady,\n  submittedFlow,\n  currentNodeId,\n  chatHistory,\n  handleUserResponse,\n  inputValue,\n  setInputValue\n}) {\n  var _submittedFlow$nodes;\n  const currentNode = submittedFlow === null || submittedFlow === void 0 ? void 0 : (_submittedFlow$nodes = submittedFlow.nodes) === null || _submittedFlow$nodes === void 0 ? void 0 : _submittedFlow$nodes[currentNodeId];\n  const isInputNode = (currentNode === null || currentNode === void 0 ? void 0 : currentNode.type) === \"input\";\n  const isChoiceNode = (currentNode === null || currentNode === void 0 ? void 0 : currentNode.type) === \"choice\" || (currentNode === null || currentNode === void 0 ? void 0 : currentNode.type) === \"multi_choice\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: 350,\n      borderLeft: \"1px solid #ccc\",\n      padding: 16,\n      overflowY: \"auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"MindPeace Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), chatbotReady ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: \"70vh\",\n          overflowY: \"auto\",\n          marginBottom: 10\n        },\n        children: chatHistory.map((entry, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: 10\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [entry.sender === \"user\" ? \"You\" : \"Bot\", \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: entry.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 17\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), currentNode && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: isInputNode ? /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => {\n            e.preventDefault();\n            handleUserResponse(inputValue);\n            setInputValue(\"\");\n          },\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            value: inputValue,\n            onChange: e => setInputValue(e.target.value),\n            style: {\n              width: \"100%\",\n              padding: 8\n            },\n            placeholder: \"Type your answer...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this) : isChoiceNode && currentNode.options ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: Object.keys(currentNode.options).map(opt => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleUserResponse(opt),\n            style: {\n              marginRight: 8,\n              marginBottom: 8\n            },\n            children: opt\n          }, opt, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this) : null\n      }, void 0, false)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please submit your flow to activate the chatbot.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_c = ChatbotPanel;\nvar _c;\n$RefreshReg$(_c, \"ChatbotPanel\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatbotPanel","chatbotReady","submittedFlow","currentNodeId","chatHistory","handleUserResponse","inputValue","setInputValue","_submittedFlow$nodes","currentNode","nodes","isInputNode","type","isChoiceNode","style","width","borderLeft","padding","overflowY","children","fileName","_jsxFileName","lineNumber","columnNumber","height","marginBottom","map","entry","i","sender","message","onSubmit","e","preventDefault","value","onChange","target","placeholder","options","Object","keys","opt","onClick","marginRight","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/mindpeace-designer/src/ChatbotPanel.js"],"sourcesContent":["import React from \"react\";\r\n\r\nexport default function ChatbotPanel({\r\n  chatbotReady,\r\n  submittedFlow,\r\n  currentNodeId,\r\n  chatHistory,\r\n  handleUserResponse,\r\n  inputValue,\r\n  setInputValue\r\n}) {\r\n  const currentNode = submittedFlow?.nodes?.[currentNodeId];\r\n\r\n  const isInputNode = currentNode?.type === \"input\";\r\n  const isChoiceNode = currentNode?.type === \"choice\" || currentNode?.type === \"multi_choice\";\r\n\r\n  return (\r\n    <div style={{ width: 350, borderLeft: \"1px solid #ccc\", padding: 16, overflowY: \"auto\" }}>\r\n      <h3>MindPeace Chat</h3>\r\n      {chatbotReady ? (\r\n        <>\r\n          <div style={{ height: \"70vh\", overflowY: \"auto\", marginBottom: 10 }}>\r\n            {chatHistory.map((entry, i) => (\r\n              <div key={i} style={{ marginBottom: 10 }}>\r\n                <strong>{entry.sender === \"user\" ? \"You\" : \"Bot\"}:</strong>\r\n                <div>{entry.message}</div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          {currentNode && (\r\n            <>\r\n              {isInputNode ? (\r\n                <form\r\n                  onSubmit={(e) => {\r\n                    e.preventDefault();\r\n                    handleUserResponse(inputValue);\r\n                    setInputValue(\"\");\r\n                  }}\r\n                >\r\n                  <input\r\n                    value={inputValue}\r\n                    onChange={(e) => setInputValue(e.target.value)}\r\n                    style={{ width: \"100%\", padding: 8 }}\r\n                    placeholder=\"Type your answer...\"\r\n                  />\r\n                </form>\r\n              ) : isChoiceNode && currentNode.options ? (\r\n                <div>\r\n                  {Object.keys(currentNode.options).map((opt) => (\r\n                    <button\r\n                      key={opt}\r\n                      onClick={() => handleUserResponse(opt)}\r\n                      style={{ marginRight: 8, marginBottom: 8 }}\r\n                    >\r\n                      {opt}\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n              ) : null}\r\n            </>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <p>Please submit your flow to activate the chatbot.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}