{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\mindpeace-designer\\\\src\\\\ChatbotPanel.js\";\n// ChatbotPanel.js\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatbotPanel({\n  chatbotReady,\n  chatHistory,\n  userInputs,\n  inputValue,\n  currentNodeId,\n  submittedFlow,\n  setChatHistory,\n  setUserInputs,\n  setCurrentNodeId,\n  setInputValue,\n  handleUserResponse,\n  gptActive\n}) {\n  const renderChatInput = () => {\n    if (!chatbotReady) return null;\n    if (gptActive || submittedFlow && currentNodeId) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: inputValue,\n          onChange: e => setInputValue(e.target.value),\n          onKeyDown: e => e.key === \"Enter\" && handleUserResponse(inputValue),\n          placeholder: \"Type your message...\",\n          style: {\n            width: \"100%\",\n            padding: 8,\n            marginBottom: 8,\n            borderRadius: 6,\n            border: \"1px solid #ccc\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleUserResponse(inputValue),\n          style: {\n            width: \"100%\",\n            background: \"#38bdf8\",\n            color: \"white\",\n            borderRadius: 6,\n            padding: \"8px 12px\",\n            border: \"none\"\n          },\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"320px\",\n      padding: 20,\n      borderLeft: \"1px solid #ddd\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"space-between\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontWeight: \"bold\",\n        marginBottom: 10\n      },\n      children: \"MindPeace Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flexGrow: 1,\n        overflowY: \"auto\",\n        marginBottom: 10,\n        display: \"flex\",\n        flexDirection: \"column\",\n        gap: 10\n      },\n      children: chatbotReady ? chatHistory.map((entry, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          alignSelf: entry.sender === \"user\" ? \"flex-end\" : \"flex-start\",\n          background: entry.sender === \"user\" ? \"#e0f2fe\" : \"#f3f4f6\",\n          padding: 8,\n          borderRadius: 6,\n          maxWidth: \"90%\"\n        },\n        children: entry.message\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Please submit your flow to activate the chatbot.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), renderChatInput()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_c = ChatbotPanel;\nvar _c;\n$RefreshReg$(_c, \"ChatbotPanel\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ChatbotPanel","chatbotReady","chatHistory","userInputs","inputValue","currentNodeId","submittedFlow","setChatHistory","setUserInputs","setCurrentNodeId","setInputValue","handleUserResponse","gptActive","renderChatInput","children","value","onChange","e","target","onKeyDown","key","placeholder","style","width","padding","marginBottom","borderRadius","border","fileName","_jsxFileName","lineNumber","columnNumber","onClick","background","color","borderLeft","display","flexDirection","justifyContent","fontWeight","flexGrow","overflowY","gap","map","entry","index","alignSelf","sender","maxWidth","message","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/mindpeace-designer/src/ChatbotPanel.js"],"sourcesContent":["// ChatbotPanel.js\r\nimport React from \"react\";\r\n\r\nexport default function ChatbotPanel({\r\n  chatbotReady,\r\n  chatHistory,\r\n  userInputs,\r\n  inputValue,\r\n  currentNodeId,\r\n  submittedFlow,\r\n  setChatHistory,\r\n  setUserInputs,\r\n  setCurrentNodeId,\r\n  setInputValue,\r\n  handleUserResponse,\r\n  gptActive\r\n}) {\r\n  const renderChatInput = () => {\r\n    if (!chatbotReady) return null;\r\n\r\n    if (gptActive || (submittedFlow && currentNodeId)) {\r\n      return (\r\n        <div>\r\n          <input\r\n            value={inputValue}\r\n            onChange={(e) => setInputValue(e.target.value)}\r\n            onKeyDown={(e) => e.key === \"Enter\" && handleUserResponse(inputValue)}\r\n            placeholder=\"Type your message...\"\r\n            style={{\r\n              width: \"100%\",\r\n              padding: 8,\r\n              marginBottom: 8,\r\n              borderRadius: 6,\r\n              border: \"1px solid #ccc\"\r\n            }}\r\n          />\r\n          <button\r\n            onClick={() => handleUserResponse(inputValue)}\r\n            style={{\r\n              width: \"100%\",\r\n              background: \"#38bdf8\",\r\n              color: \"white\",\r\n              borderRadius: 6,\r\n              padding: \"8px 12px\",\r\n              border: \"none\"\r\n            }}\r\n          >\r\n            Send\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"320px\",\r\n        padding: 20,\r\n        borderLeft: \"1px solid #ddd\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"space-between\"\r\n      }}\r\n    >\r\n      <div style={{ fontWeight: \"bold\", marginBottom: 10 }}>MindPeace Chat</div>\r\n      <div\r\n        style={{\r\n          flexGrow: 1,\r\n          overflowY: \"auto\",\r\n          marginBottom: 10,\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          gap: 10\r\n        }}\r\n      >\r\n        {chatbotReady ? (\r\n          chatHistory.map((entry, index) => (\r\n            <div\r\n              key={index}\r\n              style={{\r\n                alignSelf: entry.sender === \"user\" ? \"flex-end\" : \"flex-start\",\r\n                background: entry.sender === \"user\" ? \"#e0f2fe\" : \"#f3f4f6\",\r\n                padding: 8,\r\n                borderRadius: 6,\r\n                maxWidth: \"90%\"\r\n              }}\r\n            >\r\n              {entry.message}\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <div>Please submit your flow to activate the chatbot.</div>\r\n        )}\r\n      </div>\r\n      {renderChatInput()}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}