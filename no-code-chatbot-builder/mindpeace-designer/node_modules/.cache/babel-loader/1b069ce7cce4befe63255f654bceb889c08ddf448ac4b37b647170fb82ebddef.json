{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\mindpeace-designer\\\\src\\\\ChatbotPanel.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ChatbotPanel({\n  chatHistory,\n  currentNodeId,\n  flow,\n  onRespond,\n  gptActive,\n  inputValue,\n  setInputValue,\n  handleGptMessage\n}) {\n  const currentNode = currentNodeId ? flow.nodes[currentNodeId] : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 16\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"MindPeace Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"1px solid #ccc\",\n        padding: 10,\n        height: \"400px\",\n        overflowY: \"scroll\",\n        marginBottom: 10\n      },\n      children: chatHistory.map((msg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: msg.sender === \"user\" ? \"right\" : \"left\",\n          marginBottom: 8\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.sender === \"user\" ? \"You\" : \"Bot\", \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this), \" \", msg.message]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), !gptActive && currentNode && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [currentNode.type === \"choice\" && currentNode.options && Object.entries(currentNode.options).map(([label]) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onRespond(label),\n        style: {\n          margin: \"0 5px\",\n          padding: \"6px 12px\",\n          borderRadius: 6,\n          background: \"#3b82f6\",\n          color: \"#fff\",\n          border: \"none\"\n        },\n        children: label\n      }, label, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 15\n      }, this)), currentNode.type === \"input\" && /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          onRespond(inputValue);\n          setInputValue(\"\");\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: inputValue,\n          onChange: e => setInputValue(e.target.value),\n          placeholder: \"Type your answer\",\n          style: {\n            width: \"80%\",\n            padding: \"6px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          style: {\n            marginLeft: 6,\n            padding: \"6px 12px\",\n            borderRadius: 6,\n            background: \"#10b981\",\n            color: \"#fff\",\n            border: \"none\"\n          },\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), gptActive && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        handleGptMessage(inputValue);\n        setInputValue(\"\");\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value),\n        placeholder: \"Ask something...\",\n        style: {\n          width: \"80%\",\n          padding: \"6px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          marginLeft: 6,\n          padding: \"6px 12px\",\n          borderRadius: 6,\n          background: \"#6366f1\",\n          color: \"#fff\",\n          border: \"none\"\n        },\n        children: \"Ask\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_c = ChatbotPanel;\nvar _c;\n$RefreshReg$(_c, \"ChatbotPanel\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatbotPanel","chatHistory","currentNodeId","flow","onRespond","gptActive","inputValue","setInputValue","handleGptMessage","currentNode","nodes","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","border","height","overflowY","marginBottom","map","msg","i","textAlign","sender","message","type","options","Object","entries","label","onClick","margin","borderRadius","background","color","onSubmit","e","preventDefault","value","onChange","target","placeholder","width","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/mindpeace-designer/src/ChatbotPanel.js"],"sourcesContent":["import React from \"react\";\r\n\r\nexport default function ChatbotPanel({\r\n  chatHistory,\r\n  currentNodeId,\r\n  flow,\r\n  onRespond,\r\n  gptActive,\r\n  inputValue,\r\n  setInputValue,\r\n  handleGptMessage\r\n}) {\r\n  const currentNode = currentNodeId ? flow.nodes[currentNodeId] : null;\r\n\r\n  return (\r\n    <div style={{ padding: 16 }}>\r\n      <h3>MindPeace Chatbot</h3>\r\n      <div style={{ border: \"1px solid #ccc\", padding: 10, height: \"400px\", overflowY: \"scroll\", marginBottom: 10 }}>\r\n        {chatHistory.map((msg, i) => (\r\n          <div key={i} style={{ textAlign: msg.sender === \"user\" ? \"right\" : \"left\", marginBottom: 8 }}>\r\n            <strong>{msg.sender === \"user\" ? \"You\" : \"Bot\"}:</strong> {msg.message}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {!gptActive && currentNode && (\r\n        <>\r\n          {currentNode.type === \"choice\" && currentNode.options &&\r\n            Object.entries(currentNode.options).map(([label]) => (\r\n              <button key={label} onClick={() => onRespond(label)} style={{ margin: \"0 5px\", padding: \"6px 12px\", borderRadius: 6, background: \"#3b82f6\", color: \"#fff\", border: \"none\" }}>\r\n                {label}\r\n              </button>\r\n            ))}\r\n          {currentNode.type === \"input\" && (\r\n            <form onSubmit={(e) => { e.preventDefault(); onRespond(inputValue); setInputValue(\"\"); }}>\r\n              <input value={inputValue} onChange={(e) => setInputValue(e.target.value)} placeholder=\"Type your answer\" style={{ width: \"80%\", padding: \"6px\" }} />\r\n              <button type=\"submit\" style={{ marginLeft: 6, padding: \"6px 12px\", borderRadius: 6, background: \"#10b981\", color: \"#fff\", border: \"none\" }}>\r\n                Send\r\n              </button>\r\n            </form>\r\n          )}\r\n        </>\r\n      )}\r\n\r\n      {gptActive && (\r\n        <form onSubmit={(e) => { e.preventDefault(); handleGptMessage(inputValue); setInputValue(\"\"); }}>\r\n          <input value={inputValue} onChange={(e) => setInputValue(e.target.value)} placeholder=\"Ask something...\" style={{ width: \"80%\", padding: \"6px\" }} />\r\n          <button type=\"submit\" style={{ marginLeft: 6, padding: \"6px 12px\", borderRadius: 6, background: \"#6366f1\", color: \"#fff\", border: \"none\" }}>\r\n            Ask\r\n          </button>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}