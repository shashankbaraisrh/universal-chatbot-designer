{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\mindpeace-designer\\\\src\\\\ChatbotPanel.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatbotPanel({\n  chatbotReady,\n  submittedFlow,\n  currentNodeId,\n  chatHistory,\n  handleUserResponse,\n  inputValue,\n  setInputValue\n}) {\n  const renderChatInput = () => {\n    if (!submittedFlow || !currentNodeId) return null;\n    const node = submittedFlow.nodes[currentNodeId];\n    if (node.type === \"choice\" || node.type === \"multi_choice\") {\n      return Object.keys(node.options || {}).map(opt => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleUserResponse(opt),\n        style: {\n          padding: \"8px\",\n          margin: \"4px\",\n          width: \"100%\",\n          borderRadius: 6,\n          border: \"1px solid #ccc\",\n          background: \"#e0f2fe\"\n        },\n        children: opt\n      }, opt, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this));\n    }\n    if (node.type === \"input\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: inputValue,\n          onChange: e => setInputValue(e.target.value),\n          onKeyDown: e => e.key === \"Enter\" && handleUserResponse(inputValue),\n          style: {\n            width: \"100%\",\n            padding: 8,\n            marginBottom: 8,\n            borderRadius: 6,\n            border: \"1px solid #ccc\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleUserResponse(inputValue),\n          style: {\n            width: \"100%\",\n            background: \"#38bdf8\",\n            color: \"white\",\n            borderRadius: 6,\n            padding: \"8px 12px\",\n            border: \"none\"\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"320px\",\n      padding: 20,\n      borderLeft: \"1px solid #ddd\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"space-between\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontWeight: \"bold\",\n        marginBottom: 10\n      },\n      children: \"MindPeace Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flexGrow: 1,\n        overflowY: \"auto\",\n        marginBottom: 10\n      },\n      children: chatbotReady ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          gap: 10\n        },\n        children: chatHistory.map((entry, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            alignSelf: entry.sender === \"user\" ? \"flex-end\" : \"flex-start\",\n            background: entry.sender === \"user\" ? \"#e0f2fe\" : \"#f3f4f6\",\n            padding: 8,\n            borderRadius: 6,\n            maxWidth: \"90%\"\n          },\n          children: entry.message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Please submit your flow to activate the chatbot.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), chatbotReady && renderChatInput()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_c = ChatbotPanel;\nvar _c;\n$RefreshReg$(_c, \"ChatbotPanel\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ChatbotPanel","chatbotReady","submittedFlow","currentNodeId","chatHistory","handleUserResponse","inputValue","setInputValue","renderChatInput","node","nodes","type","Object","keys","options","map","opt","onClick","style","padding","margin","width","borderRadius","border","background","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","onKeyDown","key","marginBottom","color","borderLeft","display","flexDirection","justifyContent","fontWeight","flexGrow","overflowY","gap","entry","index","alignSelf","sender","maxWidth","message","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/mindpeace-designer/src/ChatbotPanel.js"],"sourcesContent":["import React from \"react\";\r\n\r\nexport default function ChatbotPanel({\r\n  chatbotReady,\r\n  submittedFlow,\r\n  currentNodeId,\r\n  chatHistory,\r\n  handleUserResponse,\r\n  inputValue,\r\n  setInputValue\r\n}) {\r\n  const renderChatInput = () => {\r\n    if (!submittedFlow || !currentNodeId) return null;\r\n    const node = submittedFlow.nodes[currentNodeId];\r\n    if (node.type === \"choice\" || node.type === \"multi_choice\") {\r\n      return Object.keys(node.options || {}).map((opt) => (\r\n        <button\r\n          key={opt}\r\n          onClick={() => handleUserResponse(opt)}\r\n          style={{\r\n            padding: \"8px\",\r\n            margin: \"4px\",\r\n            width: \"100%\",\r\n            borderRadius: 6,\r\n            border: \"1px solid #ccc\",\r\n            background: \"#e0f2fe\"\r\n          }}\r\n        >\r\n          {opt}\r\n        </button>\r\n      ));\r\n    }\r\n    if (node.type === \"input\") {\r\n      return (\r\n        <div>\r\n          <input\r\n            value={inputValue}\r\n            onChange={(e) => setInputValue(e.target.value)}\r\n            onKeyDown={(e) =>\r\n              e.key === \"Enter\" && handleUserResponse(inputValue)\r\n            }\r\n            style={{\r\n              width: \"100%\",\r\n              padding: 8,\r\n              marginBottom: 8,\r\n              borderRadius: 6,\r\n              border: \"1px solid #ccc\"\r\n            }}\r\n          />\r\n          <button\r\n            onClick={() => handleUserResponse(inputValue)}\r\n            style={{\r\n              width: \"100%\",\r\n              background: \"#38bdf8\",\r\n              color: \"white\",\r\n              borderRadius: 6,\r\n              padding: \"8px 12px\",\r\n              border: \"none\"\r\n            }}\r\n          >\r\n            Submit\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"320px\",\r\n        padding: 20,\r\n        borderLeft: \"1px solid #ddd\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"space-between\"\r\n      }}\r\n    >\r\n      <div style={{ fontWeight: \"bold\", marginBottom: 10 }}>MindPeace Chat</div>\r\n      <div style={{ flexGrow: 1, overflowY: \"auto\", marginBottom: 10 }}>\r\n        {chatbotReady ? (\r\n          <div style={{ display: \"flex\", flexDirection: \"column\", gap: 10 }}>\r\n            {chatHistory.map((entry, index) => (\r\n              <div\r\n                key={index}\r\n                style={{\r\n                  alignSelf:\r\n                    entry.sender === \"user\" ? \"flex-end\" : \"flex-start\",\r\n                  background:\r\n                    entry.sender === \"user\" ? \"#e0f2fe\" : \"#f3f4f6\",\r\n                  padding: 8,\r\n                  borderRadius: 6,\r\n                  maxWidth: \"90%\"\r\n                }}\r\n              >\r\n                {entry.message}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <div>Please submit your flow to activate the chatbot.</div>\r\n        )}\r\n      </div>\r\n      {chatbotReady && renderChatInput()}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}